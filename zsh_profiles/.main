
# >>> Initialize <<<

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/palermopenano/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"

if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/palermopenano/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/palermopenano/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/palermopenano/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# !!! What is this ???
#source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# >>> Aliases <<<

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# need to redirect screen shots to a folder
# you create named screenshots in ~/Desktop
alias sc='open ~/Desktop/screenshots'

alias zzz='pmset sleepnow'
alias jn='jupyter notebook'

alias ipy='ipython'
alias ipyton='ipython'
alias ipythn='ipython'
alias ipythn='ipython'

alias whoami="who am i"


# zshmarks
alias g="jump"
alias s="bookmark"
alias d="deletemark"
alias p="showmarks"
alias l="showmarks"

# git
alias gc="git commit -m"
alias gst="git status"
alias ga="git add"
alias gph="git push"
alias gdf="git diff"


jnssh() {

    # Starts a jupyter lab session in remote machine and binds remote port
    # to local port. This allows you to work on a jupyter notebook locally
    # on a remote computer.

    # To avoid having to enter passwords, copy public key to remote computer
    # by copying LOCAL_HOME/.ssh/id_rsa.pub to a file named REMOTE_HOME/.ssh/authorized_keys
    # See https://stackoverflow.com/questions/3828164/how-do-i-access-my-ssh-public-key

    # Requirements:
    # 1. miniconda
    # 2. jupyter
    # 3. Public key of local computer copied to remote host (use ssh-copy-id user@hostname)

    # Usage:
    # jnssh <project path in remote machine> <conda environment name in remote machine>
    # If you are using tiled, ~, as shortcut for the HOME path, you must use quotes
    # e.g. jnssh "~/personal/ds_project" ds_project
    # Notebook can be opened in local browser at http://localhost:8887

    # Information from remote computer
    ANACONDA_PATH=          # TODO path to miniconda3 dir
    USER=                   # TODO username
    IPADDRESS=              # TODO ip

    projectpath=$1
    envname=$2

    echo "Path to project in remote: $projectpath"

    if [ $1 = "stop" ]; then
        echo "Stopping...";
        ssh $USER@$IPADDRESS \
            "${ANACONDA_PATH}/envs/${envname}/bin/jupyter notebook stop 8889;"
        return 0
    fi

    # Find and kill process locking port 8887 in local computer
    # (in case it is being used by a previous connection that was not closed)
    lsof -ti:8887  -sTCP:LISTEN | xargs kill

    # Initializes conda environment and starts a jupyter lab session
    echo "Initialize a Jupyter Lab session"
    echo "To close session, do \"jupyssh stop ENVNAME\""

    ssh -f $USER@$IPADDRESS \
      "cd ${projectpath};
      source ${ANACONDA_PATH}/bin/activate ${envname};
      ${ANACONDA_PATH}/bin/conda env list;
      ${ANACONDA_PATH}/envs/${envname}/bin/jupyter notebook stop 8889;
      ${ANACONDA_PATH}/envs/${envname}/bin/jupyter notebook --no-browser --port=8889; exit"

    # Binds the remote port 8889 to local port 8887
    echo "Open browser at http://localhost:8887"
    ssh -N -L localhost:8887:localhost:8889 $USER@$IPADDRESS
}

fswatch_rsync() {
    # Automatically synchronize local copy of file with remote
    # Usage: fswatch_rsync dir/i/want/to/sync hostaddress
    # Source: https://stackoverflow.com/a/38997026
    path_to_dir=$1
    host=$2
    rsync -azrP --delete --exclude "virtualenv_run" --exclude "*swp" --exclude "*swo" $path_to_dir $host:~/
    fswatch -o $1 | while read f; do rsync -azrP --delete --exclude "virtualenv_run" --exclude "*swp" --exclude "*swo" $path_to_dir $host:~/; done
}
